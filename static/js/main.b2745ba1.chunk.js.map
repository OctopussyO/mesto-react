{"version":3,"sources":["components/Header.js","utils/utils.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logoPath","alt","initialUserData","name","about","avatar","initialCardsData","link","api","document","querySelector","options","this","_baseUrl","baseUrl","_headers","headers","_contentType","res","ok","json","Promise","reject","status","fetch","then","_handleResponse","data","method","body","JSON","stringify","cardId","authorization","Card","likes","onCardClick","type","aria-label","width","height","fill","xmlns","d","onClick","viewBox","stroke","strokeWidth","length","Main","onEditProfile","onAddPlace","onEditAvatar","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","isLoading","setLoadingState","setData","userData","cardsData","useEffect","all","getUserData","getData","catch","err","alert","map","card","_id","Math","random","toString","finally","style","backgroundImage","key","Footer","PopupWithForm","title","children","isOpen","onClose","handleEscape","evt","addEventListener","removeEventListener","onMouseDown","target","closest","action","noValidate","ImagePopup","place","getInputTemplate","placeholder","minLength","maxLength","required","autoComplete","getSubmitTemplate","submitTitle","isSubmitActive","disabled","App","isEditProfilePopupOpen","setEditProfilePopupState","isAddPlacePopupOpen","setAddPlacePopupState","isEditAvatarPopupOpen","setEditAvatarPopupState","isImagePopupOpen","setImagePopupState","selectedCard","setSelectedCard","closeAllPopups","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.b2745ba1.chunk.js","sourcesContent":["import React from 'react';\r\nimport logoPath from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <img\r\n        className=\"header__logo\"\r\n        src={logoPath}\r\n        alt=\"Логотип проекта 'Место'\"\r\n      />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","// Объект исходных данных пользователя\r\nexport const initialUserData = {\r\n  name: 'Фёдор Конюхов',\r\n  about: 'Российский путешественник',\r\n  avatar: 'https://uznayvse.ru/images/celebs/konuhov_medium.jpg'\r\n}\r\n\r\n// Массив с данными исходных карточек\r\nexport const initialCardsData = [\r\n  {\r\n    name: 'Алтайский край',\r\n    link: 'https://images.unsplash.com/photo-1494791286225-ea86fc957ba7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1947&q=80'\r\n  },\r\n  {\r\n    name: 'Ладожское озеро',\r\n    link: 'https://images.unsplash.com/photo-1547846218-c982107d30f2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1972&q=80'\r\n  },\r\n  {\r\n    name: 'Гора Нургуш',\r\n    link: 'https://images.unsplash.com/photo-1506516493400-bb5e8347bf0e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1955&q=80'\r\n  },\r\n  {\r\n    name: 'Судак, Крым',\r\n    link: 'https://images.unsplash.com/photo-1565342403875-07a8dc5ed13c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2000&q=80'\r\n  },\r\n  {\r\n    name: 'Байкал',\r\n    link: 'https://images.unsplash.com/photo-1551844931-cfcfecb3636f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2034&q=80'\r\n  },\r\n  {\r\n    name: 'Владивосток',\r\n    link: 'https://images.unsplash.com/photo-1563943078-d83d3fb86468?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2134&q=80'\r\n  }\r\n]\r\n\r\n// Объект данных для API\r\nexport const apiConfig = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\r\n  headers: {\r\n    authorization: '584f4afd-78a5-47f8-908c-ac61484f6bb9',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\n// Объект валидации\r\nexport const objectOfValidation = {\r\n  formSelector: 'form.popup__container',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__save-button',\r\n  activeButtonClass: 'popup__save-button_unblocked',\r\n  inactiveButtonClass: 'popup__save-button_blocked',\r\n  inputValidClass: 'popup__input_valid',\r\n  inputErrorClass: 'popup__input_invalid',\r\n  errorClass: 'popup__error'\r\n};\r\n\r\n// Кнопки\r\nexport const editProfileButton = document.querySelector('.profile__edit-button');\r\nexport const editAvatarButton = document.querySelector('.profile__avatar-button');\r\nexport const addCardButton = document.querySelector('.profile__add-button');\r\n\r\n// Селекторы\r\nexport const contentSelector = '.content';\r\nexport const spinnerSelector = '.spinner';\r\nexport const imagePopupSelector = '.popup_act_enlarge-image';\r\nexport const editPopupSelector = '.popup_act_edit-profile';\r\nexport const addPopupSelector = '.popup_act_add-card';\r\nexport const avatarPopupSelector = '.popup_act_edit-avatar';\r\nexport const confirmPopupSelector = '.popup_act_confirm';\r\nexport const sectionSelector = '.gallery';\r\nexport const cardSelector = '.card-template';\r\n\r\n// // Wrappers\r\n// const content = document.querySelector(contentSelector);\r\n// const spinner = document.querySelector(spinnerSelector);\r\n\r\n// // Функция отрисовки спиннера при загрузке страницы\r\n// export const renderLoading = (isLoading) => {\r\n//   if (isLoading) {\r\n//     spinner.classList.add('spinner_visible');\r\n//     content.classList.add('content_hidden');\r\n//   } else {\r\n//     spinner.classList.remove('spinner_visible');\r\n//     content.classList.remove('content_hidden');\r\n//   }\r\n// }\r\n","import { apiConfig } from \"./utils\";\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n    this._contentType = options.headers['Content-Type'];\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  getUserData() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers\r\n    })\r\n      .then(this._handleResponse);\r\n  }\r\n\r\n  getData() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers\r\n    })\r\n      .then(this._handleResponse)\r\n  }\r\n\r\n  saveUserData(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(this._handleResponse)\r\n  }\r\n\r\n  saveUserAvatar(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(this._handleResponse)\r\n  }\r\n\r\n  saveNewItem(data) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(this._handleResponse)\r\n  }\r\n\r\n  likeItem(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'PUT',\r\n      headers: this._headers\r\n    })\r\n      .then(this._handleResponse)\r\n  }\r\n\r\n  unlikeItem(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(this._handleResponse)\r\n  }\r\n\r\n  deleteItem(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(this._handleResponse)\r\n  }\r\n}\r\n\r\nexport const api = new Api(apiConfig);\r\n","import React from 'react';\r\n\r\nfunction Card({ name, link, likes, onCardClick }) {\r\n  const handleClick = () => {\r\n    onCardClick({ name, link });\r\n  }\r\n\r\n  return (\r\n    <figure className=\"card\">\r\n      <button className=\"card__button card__button_act_delete page__button\" type=\"button\" aria-label=\"Удалить\">\r\n        <svg width=\"18\" height=\"20\" fill=\"#fff\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M2.458 18.142c.06.67.61 1.158 1.28 1.158H14.26c.67 0 1.22-.508 1.28-1.158L16.72 \r\n          5.79H1.28l1.178 12.352zM16.72 1.93h-5.14v-.65C11.58.569 11.011 0 10.3 0H7.72C7.01 0 6.44.569 \r\n          6.44 1.28v.65H1.28C.569 1.93 0 2.499 0 3.21c0 .711.569 1.28 1.28 1.28h15.44c.711 0 1.28-.569 \r\n          1.28-1.28 0-.711-.569-1.28-1.28-1.28z\" />\r\n        </svg>\r\n      </button>\r\n      <button \r\n        className=\"card__button card__button_act_enlarge-image\"\r\n        type=\"button\"\r\n        aria-label=\"Увеличить\"\r\n        onClick={ handleClick }\r\n      >\r\n        <img className=\"card__image\" src={ link } alt={`${ name }, фотография`} />\r\n      </button>\r\n      <figcaption className=\"card__description\">\r\n        <h2 className=\"card__heading\">{ name }</h2>\r\n        <div className=\"card__likes\">\r\n          <button className=\"card__button card__button_act_like page__button\" type=\"button\" aria-label=\"Нравится\">\r\n            <svg width=\"20\" height=\"18\" viewBox=\"-1 -1 23 19\" stroke=\"black\" strokeWidth=\"1.5\" \r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M19.154 9.338c2.14-2.14 2.14-5.614 0-7.733a5.486 5.486 0 00-7.755 0l-1.038 \r\n              1.06-1.038-1.039C7.183-.535 3.708-.535 1.589 1.605A5.43 5.43 0 000 5.482c0 1.462.572 \r\n              2.84 1.59 3.877l8.771 8.772 8.793-8.793z\"/>\r\n            </svg>\r\n          </button>\r\n          <span className=\"card__likes_quantity\">{ likes.length }</span>\r\n        </div>\r\n      </figcaption>\r\n    </figure>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { api } from '../utils/api.js';\r\nimport { initialCardsData, initialUserData } from '../utils/utils.js';\r\nimport Card from './Card.js';\r\n\r\n\r\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick }) {\r\n  const [userName, setUserName] = useState('');\r\n  const [userDescription, setUserDescription] = useState('');\r\n  const [userAvatar, setUserAvatar] = useState('');\r\n  const [cards, setCards] = useState([]);\r\n  // Переменная состояния для загрузки (показываем/убираем спиннер)\r\n  const [isLoading, setLoadingState] = useState(true);\r\n  \r\n  const setData = (userData, cardsData) => {\r\n    setUserName(userData.name);\r\n    setUserDescription(userData.about);\r\n    setUserAvatar(userData.avatar);\r\n    setCards(cardsData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Загружаем данные с сервера\r\n    Promise.all([api.getUserData(), api.getData()])\r\n      .then(([userData, cardsData]) => {\r\n        setData(userData, cardsData);\r\n      })\r\n      // Если данные не загрузились, используем тестовые данные\r\n      // на случай, если вдруг крякнется сервер ЯП.\r\n      // планирую переделать на какой-нибудь открытый API\r\n      .catch((err) => {\r\n        alert(`${err}: Приложение работает в тестовом режиме!`);\r\n        const cardsData = initialCardsData.map((card) => {\r\n          // Генерируем id. Реализация не самая надёжная, \r\n          // но для теста и 6 карточек пойдёт.\r\n          card._id = `f${(~~(Math.random()*1e8)).toString(16)}`;\r\n          card.likes = [];\r\n          return card;\r\n        })\r\n        setData(initialUserData, cardsData);\r\n      })\r\n      .finally(() => {\r\n        setLoadingState(false);\r\n      })\r\n\r\n  }, []);\r\n    \r\n  return (\r\n    <main className=\"main page__narrow\">\r\n      { isLoading\r\n      ? ( <div className=\"spinner spinner_visible\" /> )\r\n      : (\r\n        <div className=\"content\">\r\n          <section className=\"profile\">\r\n            <div \r\n              className=\"profile__image\"\r\n              style={{ backgroundImage: `url(${ userAvatar })` }}\r\n            >\r\n              <button\r\n                className=\"profile__avatar-button\"\r\n                aria-label=\"Редактировать\"\r\n                type=\"button\"\r\n                onClick={ onEditAvatar }\r\n              />\r\n            </div>\r\n            <div className=\"profile__data\">\r\n              { /* Отключаем встроенное правило для следующей строки, чтобы консоль \r\n              не ругалась на отсутствие текста в заголовке \r\n              После заполнения поля это уже не нужно, но оставлю пока на память */ }\r\n              {  /* eslint-disable-next-line */ }\r\n              <h1 className=\"profile__name\">{ userName }</h1>\r\n              <button\r\n                className=\"profile__edit-button page__button\"\r\n                aria-label=\"Редактировать\"\r\n                type=\"button\"\r\n                onClick={ onEditProfile }\r\n              />\r\n              <p className=\"profile__profession\">{ userDescription }</p>\r\n            </div>\r\n            <button\r\n              className=\"profile__add-button page__button\"\r\n              aria-label=\"Добавить\"\r\n              type=\"button\"\r\n              onClick={ onAddPlace }\r\n            />\r\n          </section>\r\n          <section className=\"gallery\">\r\n            { cards.map(({ _id, ...card }) => (\r\n              <Card key={ _id } { ...card } onCardClick={ onCardClick } />\r\n            ))}\r\n          </section>\r\n        </div>\r\n      )}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n  return (\r\n    <footer className=\"footer page__narrow\">\r\n      <p className=\"footer__copyright\">\r\n        &copy;&nbsp;2020 Mesto Russia\r\n      </p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from 'react';\r\n\r\nfunction PopupWithForm({ title, name, children, isOpen, onClose }) {\r\n  // Обработчик клика по оверлею\r\n  const handleOverlayPopupClick = (evt) => {\r\n    if (!evt.target.closest('.popup__container')) {\r\n      onClose();\r\n    }\r\n  }\r\n  \r\n  // Обработчик нажатия клавиши \"Escape\"\r\n  const handleEscape = (evt) => {\r\n    if (evt.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  }  \r\n\r\n  // Используем хук эффекта для закрытия модалки по нажатию клавиши \"Escape\"\r\n  useEffect(() => {\r\n    document.body.addEventListener('keydown', handleEscape);\r\n    return () => {\r\n      document.body.removeEventListener('keydown', handleEscape);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={`popup popup_act_${name}${ isOpen ? ' popup_active' : '' }`}\r\n      onMouseDown={ handleOverlayPopupClick }\r\n    >\r\n      <form \r\n        action=\"#\"\r\n        className=\"popup__container popup__container_with_form\"\r\n        name={name}\r\n        method=\"GET\" \r\n        noValidate\r\n      >\r\n        <h2 className=\"popup__heading\">{title}</h2>\r\n        {children}\r\n        <button \r\n          className=\"popup__close-button page__button\" \r\n          type=\"button\" \r\n          aria-label=\"Закрыть\"\r\n          onClick={ onClose }\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React, { useEffect } from 'react';\r\n\r\nfunction ImagePopup({ place, isOpen, onClose }) {\r\n  // Обработчик клика по оверлею\r\n  const handleOverlayPopupClick = (evt) => {\r\n    if (!evt.target.closest('.popup__container')) {\r\n      onClose();\r\n    }\r\n  }\r\n  \r\n  // Обработчик нажатия клавиши \"Escape\"\r\n  const handleEscape = (evt) => {\r\n    if (evt.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  }  \r\n\r\n  // Используем хук эффекта для закрытия модалки по нажатию клавиши \"Escape\"\r\n  useEffect(() => {\r\n    document.body.addEventListener('keydown', handleEscape);\r\n    return () => {\r\n      document.body.removeEventListener('keydown', handleEscape);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div \r\n      className={`popup popup_act_enlarge-image${ isOpen ? ' popup_active' : '' }`}\r\n      onMouseDown={ handleOverlayPopupClick }\r\n    >\r\n      <figure className=\"popup__container\">\r\n        <img\r\n          className=\"popup__image\"\r\n          src={ place.link }\r\n          alt={ `${place.name}, фотография` }\r\n        />\r\n        <figcaption>\r\n          <p className=\"popup__image-caption\">\r\n            { `${place.name}, фотография` }\r\n          </p>\r\n          <button \r\n            className=\"popup__close-button page__button\"\r\n            type=\"button\"\r\n            aria-label=\"Закрыть\"\r\n            onClick={ onClose }\r\n          />\r\n        </figcaption>\r\n      </figure>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport ImagePopup from \"./ImagePopup\";\r\n\r\nconst getInputTemplate = ({\r\n  name,\r\n  placeholder,\r\n  type,\r\n  minLength,\r\n  maxLength,\r\n}) => {\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"popup__input popup__input_valid\"\r\n        name={name}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        minLength={minLength}\r\n        maxLength={maxLength}\r\n        required\r\n        autoComplete=\"off\"\r\n      />\r\n      <span className=\"popup__error popup__error_in_name\" />\r\n    </>\r\n  );\r\n};\r\n\r\nconst getSubmitTemplate = (submitTitle, isSubmitActive) => {\r\n  return (\r\n    <button\r\n      className={`popup__save-button ${\r\n        isSubmitActive\r\n          ? \"popup__save-button_unblocked\"\r\n          : \"popup__save-button_blocked\"\r\n      }`}\r\n      disabled={!isSubmitActive}\r\n      type=\"submit\"\r\n    >\r\n      {submitTitle}\r\n    </button>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  // Используем хуки состояния для открытия попапов\r\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupState] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = useState(false);\r\n  const [isImagePopupOpen, setImagePopupState] = useState(false);\r\n\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n\r\n  const handleEditAvatarClick = () => {\r\n    setEditAvatarPopupState(true);\r\n  };\r\n  const handleEditProfileClick = () => {\r\n    setEditProfilePopupState(true);\r\n  };\r\n  const handleAddPlaceClick = () => {\r\n    setAddPlacePopupState(true);\r\n  };\r\n\r\n  const handleCardClick = (card) => {\r\n    setSelectedCard(card);\r\n    setImagePopupState(true);\r\n  };\r\n\r\n  const closeAllPopups = () => {\r\n    setEditAvatarPopupState(false);\r\n    setEditProfilePopupState(false);\r\n    setAddPlacePopupState(false);\r\n    setImagePopupState(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"page__container\">\r\n        <Header />\r\n        {/* Пробрасываем обработчики клика */}\r\n        <Main\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onEditProfile={handleEditProfileClick}\r\n          onCardClick={handleCardClick}\r\n        />\r\n        <Footer />\r\n      </div>\r\n      <PopupWithForm\r\n        title=\"Редактировать профиль\"\r\n        name=\"edit-profile\"\r\n        isOpen={isEditProfilePopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <fieldset className=\"popup__fieldset\">\r\n          {getInputTemplate({\r\n            name: \"name\",\r\n            placeholder: \"Имя\",\r\n            type: \"text\",\r\n            minLength: \"2\",\r\n            maxLength: \"40\",\r\n          })}\r\n          {getInputTemplate({\r\n            name: \"info\",\r\n            placeholder: \"Профессия\",\r\n            type: \"text\",\r\n            minLength: \"2\",\r\n            maxLength: \"200\",\r\n          })}\r\n        </fieldset>\r\n        {getSubmitTemplate(\"Сохранить\", false)}\r\n      </PopupWithForm>\r\n      <PopupWithForm\r\n        title=\"Новое место\"\r\n        name=\"add-card\"\r\n        isOpen={isAddPlacePopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <fieldset className=\"popup__fieldset\">\r\n          {getInputTemplate({\r\n            name: \"place\",\r\n            placeholder: \"Название\",\r\n            type: \"text\",\r\n            minLength: \"1\",\r\n            maxLength: \"30\",\r\n          })}\r\n          {getInputTemplate({\r\n            name: \"link\",\r\n            placeholder: \"Ссылка на картинку\",\r\n            type: \"url\",\r\n          })}\r\n        </fieldset>\r\n        {getSubmitTemplate(\"Создать\", false)}\r\n      </PopupWithForm>\r\n      <PopupWithForm\r\n        title=\"Обновить аватар\"\r\n        name=\"edit-avatar\"\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <fieldset className=\"popup__fieldset\">\r\n          {getInputTemplate({\r\n            name: \"avatar\",\r\n            placeholder: \"Ссылка на аватар\",\r\n            type: \"url\",\r\n          })}\r\n        </fieldset>\r\n        {getSubmitTemplate(\"Сохранить\", false)}\r\n      </PopupWithForm>\r\n      <ImagePopup\r\n        isOpen={isImagePopupOpen}\r\n        place={selectedCard}\r\n        onClose={closeAllPopups}\r\n      />\r\n      <PopupWithForm\r\n        title=\"Вы уверены?\"\r\n        name=\"confirm\"\r\n        // isOpen={ isConfirmPopupOpen }\r\n        // onClose={ closeAllPopups }\r\n      >\r\n        {getSubmitTemplate(\"Да\", true)}\r\n      </PopupWithForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.e889e45f.svg\";"],"sourceRoot":""}